---
openapi: 3.0.0
info:
    title: Carthage API
    description: The API Specification for Carthage
    version: 0.0.0
paths:
    "/ping":
        get:
            operationId: Ping
            tags:
                - Shared
            summary: Retrieve the ping status
            description: This endpoint is used to check the availability of the service. It
                returns a random quote from Hannibal, The Carthaginian General, along
                with the current time.
            responses:
                "200":
                    $ref: "Shared/Response.yaml#/components/responses/Ping.Ok"
    "/log-management/collect":
        post:
            operationId: LogManagementCollect
            tags:
                - Log Management
            summary: Collect Multiple Logs
            description: Collect multiple log entries, for multiple logs.
            requestBody:
                $ref: "LogManagement/DataTransferObject.yaml#/components/requestBodies/LogManagement.Collect"
            responses:
                "202":
                    $ref: "LogManagement/Response.yaml#/components/responses/LogManagementCollect.Accepted"
                "400":
                    $ref: "LogManagement/Response.yaml#/components/responses/LogManagementCollect.BadRequest"
    "/log-management/log":
        get:
            operationId: LogManagementGetLogCollection
            tags:
                - Log Management
            summary: Get Log Collection
            description: Retrieve a collection of logs.
            parameters:
                -   $ref: "LogManagement/Log/Filter.yaml#/components/parameters/LogManagement.Log.LogFilter.Contains"
                -   $ref: "LogManagement/Log/Filter.yaml#/components/parameters/LogManagement.Log.LogFilter.Levels"
                -   $ref: "LogManagement/Log/Filter.yaml#/components/parameters/LogManagement.Log.LogFilter.From"
                -   $ref: "LogManagement/Log/Filter.yaml#/components/parameters/LogManagement.Log.LogFilter.To"
                -   $ref: "LogManagement/Log/Filter.yaml#/components/parameters/LogManagement.Log.LogFilter.SortBy"
                -   $ref: "LogManagement/Log/Filter.yaml#/components/parameters/LogManagement.Log.LogFilter.Order"
                -   $ref: "Shared/Filter.yaml#/components/parameters/Shared.Pagination.Page"
                -   $ref: "Shared/Filter.yaml#/components/parameters/Shared.Pagination.ItemsPerPage"
            responses:
                "200":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementGetLogCollection.Ok"
                "400":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementGetLogCollection.BadRequest"
        post:
            operationId: LogManagementCreateLog
            tags:
                - Log Management
            summary: Create Log
            description: Create a new log.
            requestBody:
                $ref: "LogManagement/Log/DataTransferObject.yaml#/components/requestBodies/LogManagement.Log.CreateLog"
            responses:
                "200":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementCreateLog.Ok"
                "400":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementCreateLog.BadRequest"
                "409":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementCreateLog.Conflict"
    "/log-management/log/{identity}":
        delete:
            operationId: LogManagementDeleteLog
            tags:
                - Log Management
            summary: Delete Log
            description: Delete a log by identity.
            parameters:
                -   $ref: "Shared/Parameter.yaml#/components/parameters/Shared.Identity"
            responses:
                "204":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementDeleteLog.NoContent"
                "404":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementDeleteLog.NotFound"
        get:
            operationId: LogManagementGetLog
            tags:
                - Log Management
            summary: Get Log
            description: Get a log by its identity.
            parameters:
                -   $ref: "Shared/Parameter.yaml#/components/parameters/Shared.Identity"
            responses:
                "200":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementGetLog.Ok"
                "404":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementGetLog.NotFound"
    "/log-management/log/namespace":
        get:
            operationId: LogManagementGetLogNamespaceCollection
            tags:
                - Log Management
            summary: Get Log Namespace Collection
            description: Retrieve a collection of log namespaces.
            responses:
                "200":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementGetLogNamespaceCollection.Ok"
    "/log-management/log/entry":
        get:
            operationId: LogManagementGetLogEntryCollection
            tags:
                - Log Management
            summary: Get Log Entry Collection
            description: Retrieve a collection of log entries.
            parameters:
                -   $ref: "Shared/Filter.yaml#/components/parameters/Shared.Pagination.Page"
                -   $ref: "Shared/Filter.yaml#/components/parameters/Shared.Pagination.ItemsPerPage"
                -   $ref: "LogManagement/Log/Filter.yaml#/components/parameters/LogManagement.Log.LogEntryFilter.LogIdentity"
                -   $ref: "LogManagement/Log/Filter.yaml#/components/parameters/LogManagement.Log.LogEntryFilter.Before"
                -   $ref: "LogManagement/Log/Filter.yaml#/components/parameters/LogManagement.Log.LogEntryFilter.After"
                -   $ref: "LogManagement/Log/Filter.yaml#/components/parameters/LogManagement.Log.LogEntryFilter.Order"
                -   $ref: "LogManagement/Log/Filter.yaml#/components/parameters/LogManagement.Log.LogEntryFilter.Source"
            responses:
                "200":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementGetLogEntryCollection.Ok"
                "400":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementGetLogEntryCollection.BadRequest"
        post:
            operationId: LogManagementCreateLogEntry
            tags:
                - Log Management
            summary: Create Log Entry
            description: Create a new log entry.
            requestBody:
                $ref: "LogManagement/Log/DataTransferObject.yaml#/components/requestBodies/LogManagement.Log.CreateLogEntry"
            responses:
                "200":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementCreateLogEntry.Ok"
                "400":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementCreateLogEntry.BadRequest"
                "404":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementCreateLogEntry.NotFound"
    "/log-management/log/entry/{identity}":
        get:
            operationId: LogManagementGetLogEntry
            tags:
                - Log Management
            summary: Get Log Entry
            description: Get a log entry by its identity.
            parameters:
                -   $ref: "Shared/Parameter.yaml#/components/parameters/Shared.Identity"
            responses:
                "200":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementGetLogEntry.Ok"
                "404":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementGetLogEntry.NotFound"
        delete:
            operationId: LogManagementDeleteLogEntry
            tags:
                - Log Management
            summary: Delete Log Entry
            description: Delete a log entry by identity.
            parameters:
                -   $ref: "Shared/Parameter.yaml#/components/parameters/Shared.Identity"
            responses:
                "204":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementDeleteLogEntry.NoContent"
                "404":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementDeleteLogEntry.NotFound"
    "/log-management/log/entry/tag":
        get:
            operationId: LogManagementGetLogEntryTagCollection
            tags:
                - Log Management
            summary: Get Log Entry Tag Collection
            description: Retrieve a collection of log entry tags.
            responses:
                "200":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementGetLogEntryTagCollection.Ok"
    "/log-management/log/entry/source":
        get:
            operationId: LogManagementGetLogEntrySourceCollection
            tags:
                - Log Management
            summary: Get Log Entry Source Collection
            description: Retrieve a collection of log entry sources.
            responses:
                "200":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementGetLogEntrySourceCollection.Ok"
    "/log-management/log/collect":
        post:
            operationId: LogManagementCollectLog
            tags:
                - Log Management
            summary: Collect Log Entries
            description: Collect log entries from a log.
            requestBody:
                $ref: "LogManagement/Log/DataTransferObject.yaml#/components/requestBodies/LogManagement.Log.CollectLog"
            responses:
                "202":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementCollectLog.Accepted"
                "400":
                    $ref: "LogManagement/Log/Response.yaml#/components/responses/LogManagementCollectLog.BadRequest"
    "/log-management/log/statistic/entry-frequency-count/{frequency}/from/{from}/to/{to}":
        get:
            operationId: LogManagementGetLogEntryFrequencyCountCollection
            tags:
                - Log Management
            summary: Get Log Entry Frequency Count
            description: Get the frequency count of log entries.
            parameters:
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.Frequency"
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.From"
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.To"
            responses:
                "200":
                    $ref: "LogManagement/Log/Statistics/Response.yaml#/components/responses/LogManagementGetLogEntryFrequencyCountCollection.Ok"
    "/log-management/log/statistic/entry-source-frequency/from/{from}/to/{to}":
        get:
            operationId: LogManagementGetLogEntrySourceFrequencyCollection
            tags:
                - Log Management
            summary: Get Log Entry Source Frequency
            description: Get the frequency count of log entry sources.
            parameters:
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.From"
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.To"
            responses:
                "200":
                    $ref: "LogManagement/Log/Statistics/Response.yaml#/components/responses/LogManagementGetLogEntrySourceFrequencyCollection.Ok"
    "/log-management/log/statistic/entry-tag-distribution/from/{from}/to/{to}":
        get:
            operationId: LogManagementGetLogEntryTagDistributionCollection
            tags:
                - Log Management
            summary: Get Log Entry Tag Distribution
            description: Get the distribution of log entry tags.
            parameters:
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.From"
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.To"
            responses:
                "200":
                    $ref: "LogManagement/Log/Statistics/Response.yaml#/components/responses/LogManagementGetLogEntryTagDistributionCollection.Ok"
    "/log-management/log/statistic/frequency-count/{frequency}/from/{from}/to/{to}":
        get:
            operationId: LogManagementGetLogFrequencyCountCollection
            tags:
                - Log Management
            summary: Get Log Frequency Count
            description: Get the frequency count of logs.
            parameters:
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.Frequency"
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.From"
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.To"
            responses:
                "200":
                    $ref: "LogManagement/Log/Statistics/Response.yaml#/components/responses/LogManagementGetLogFrequencyCountCollection.Ok"
    "/log-management/log/statistic/level-statistics/from/{from}/to/{to}":
        get:
            operationId: LogManagementGetLogLevelStatisticCollection
            tags:
                - Log Management
            summary: Get Log Level Statistics
            description: Get the statistics of log levels.
            parameters:
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.From"
                -   $ref: "LogManagement/Log/Statistics/Parameter.yaml#/components/parameters/LogManagement.Log.Statistics.To"
            responses:
                "200":
                    $ref: "LogManagement/Log/Statistics/Response.yaml#/components/responses/LogManagementGetLogLevelStatisticCollection.Ok"
